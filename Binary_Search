int search(vector<int> &nums, int target) {
    // Write your code here.
    int n = nums.size();

    int low=0;
    int high = n-1;

    while(low<=high){
      int mid = (low+high)/2;

      if(nums[mid]==target) return mid;

      else if(nums[mid]>target) high = mid-1;

      else low=mid+1;
    }
    return -1;
}
Time : O(logn)

// Recursive

int bs(vector<int>&nums,int target,int low,int high){
  if(low>high) return -1;

  int mid = (low+high)/2;

  if(nums[mid]==target) return mid;

  else if(nums[mid]>target) return bs(nums,target,low,mid-1);

  else return bs(nums,target,mid+1,high);
}

int search(vector<int> &nums, int target) {
    // Write your code here.
    int n = nums.size();

    return bs(nums,target,0,n-1);
}
